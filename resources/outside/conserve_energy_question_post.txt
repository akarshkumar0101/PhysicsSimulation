Hi!

I am creating a C++ Physics Simulation where I need to move an rigid body through an acting force field.

**Problem**: simulation does not conserve energy.<br>
**Quesiton**: abstractly, how is conservation of energy handled in modern day physics simulations?

**My specific instance**:<br>
Simulation parameters:<br>
 - Constant force field F = <-x, y, z> (spring force field resulting in oscillation)<br>
 - One rigid body with one point mass at (1, 0, 0).

This should result in oscillation of the body from (1, 0, 0) to (-1, 0, 0) and back.

It works well for the first couple of seconds, and then gradually the body gains energy unboundedly,
as the body goes to max position of x = 1.1, then x = 1.3, then x = 1.7, etc. 

I am pretty sure this is what is happening but **I do NOT know how to fix it the mathematical model of my system**:
Since I am updating the body using discrete time steps,
whenever the body is at (0.99, 0, 0) or something near but below 1.0,
the body's position, X, gets updated going rightward, a little past 1.0,
and thus the body permanently gains a little bit of energy.
**This process repeats over and over again and the body continually gains energy.**

**This would naturally be a problem with how I am solving the
movement differential equation using discrete time steps.<br>
How can I go about simulating this in order to conserve energy, and keep the simulation accurate, even with weird force fields?**

---------------------------------------------------------------------------

**Side notes**<br>
Equation of motion:

	updateBody(dt):
		X += V * dt
		P += F * dt
		L += T * dt
		Q += 0.5 * (quaternion(re: 0, im: W) * Q)
		Q = normalize(Q)

 - X : position of center of mass (vector)
 - P : momentum (vector)
 - L : angular moment (vector)
 - Q : orientation (quaternion)
 - V : velocity of center of mass (vector)
 - W : angular velocity (vector)
 - dt: the timestep to update with
 - F : total force (vector) = sum of forces acting on all point masses of rigid body
 - T : total torque (vector) = sum of torques acting on all point masses of rigid body

Event loop:

	while(true):
		t = getTime()
		dt = t - t'

		updateBody(dt)
		render()

		t' = t



TAGS: 
 - computational-physics
 - numerical-analysis
 - simulation 

 